This README written by Steven Beauchemin

This program, anandan.c, is an implementation of Anandan 1987's motion
detection algorithm.
To compile:

   make -f makeanandan

Everything is in a single file so a make is really not necessary but...
This program uses 2 input images and decomposes them into different
frequency bands that are stored in pyramidal data structures. This is
done using a DOG operator. The algorithm uses a correlation window
for the detection of motion. Examples of run files are also present. 
(You'll have to change the directory names where the input and output are 
directed.) Here's a description of a typical command line (that is exactly
what one gets if one invokes the program with no parameters):

Usage: anandan input-path output-path seq-name. -N n1 n2 [-W n] [-L n] 
[-I n] [-R] [-S] [-F n.n] [-B rows cols] [-C corr-vel-file -T nbins increment]

-N n1 n2 : frame numbers n1 and n2
[-W n]   : correlation window size (3, 5 or 7)
           default value is 3
[-L n]   : number of hierarchical levels
           default value is 1
[-I n]   : number of relaxation iterations
           default value is 10
[-R]     : avoids regularization
[-S]     : avoids sub-pixel accuracy
[-F n.n] : filters out unreliable estimates
           using confidence measure Cmax
[-B rows cols]
         : for binary input files without header
[-C corr-vel-file -T nbins increment]
         : error histogram
           corr-vel-file : file of correct velocities
           nbins : number of bins for histogram
           increment : value of gap between bins

Here is a typical run:
 
anandan /data/images1/BURKITT/testdata /data/images1/BURKITT/outdata treet. -N 9 10 -W 5 -L 3 -I 15 -C correct_treet -T 20 0.5

This command means: run anandan using the input files from 
/data/images1/BURKITT/testdata and put output files in
/data/images1/BURKITT/outdata 

treet. is the stem name of a typical set of input images (for example,
the complete filename for frame 9 is "treet.9"). In the above example,
the program expects to find the input images in /data/images1/BURKITT/testdata.

-N 9 10 indicates that frames 9 and 10 are used. The program takes the
stem name "treet." and appends the numbers 9 and 10 to form the filenames
"treet.9" and "treet.10".

-W 5 indicates that a 5 by 5 correlation window is used in the matching 
process. Choices are size 3, 5, or 7.

-L 3 indicates that 3 pyramidal levels are used when decomposing the images
into frequency bands. Values of 2, 3 and 4 are typical.

-I 15 indicates that 15 relaxation iterations will be performed on the
flow field at every pyramidal level. 10 iterations are usually sufficient. 

-C indicates the correct answer is available and that you want error analysis
conducted and that data is in /data/images1/BURKITT/testdata/correct_treet 
(change this as well as appropriate). The data is analysed by producing a 
histogram.

-T is mandatory when using -C. It specifies the number of bins the histogram
will contain and the increment between them. The histogram is constructed
by considering the error of the estimates versus the confidence measure Cmin. 

The program automatically generates the output filenames for the flow field
and the histogram (if an histogram is requested). For the above example,
the filename of the flow field would be:

anandan.treet.F-n9-10-w5-l3-i15

and the filename of the histogram:

anandan.treet.H-n9-10-w5-l3-i15

Note that the letters and numbers of the extension are the parameters 
used when invoking the program.

The program takes between 4:00 and 20:00 minutes to run on an IBM 6000,
depending on the size of the images being processed. See the README for
information about the output format for flows and use software in ../SOFTWARE 
to print out the flow fields in postscript.
